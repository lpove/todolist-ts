{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/leipan/Desktop/release/React/Project/3-Blog/todolist-ts/client/src/components/Spider.tsx\";\nimport React from 'react';\n\nconst Spider = ({\n  loading,\n  spiders,\n  testSpider\n}) => {\n  const $spiders = () => {\n    if (loading) {\n      return 'loading...';\n    } else {\n      if (spiders && spiders.length) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: spiders.slice(0, 10).map(item => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                style: {\n                  color: 'white'\n                },\n                href: item.links,\n                target: \"_balnk\",\n                children: item.title\n              }, item.title, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 18\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this);\n      }\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"clickMe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card--button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => testSpider(),\n        className: \"Card--button__delete\",\n        children: \"testSpider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), $spiders()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Spider;\nexport default Spider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spider\");","map":{"version":3,"sources":["/Users/leipan/Desktop/release/React/Project/3-Blog/todolist-ts/client/src/components/Spider.tsx"],"names":["React","Spider","loading","spiders","testSpider","$spiders","length","slice","map","item","color","links","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAQA,MAAMC,MAAuB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAD,KAAsC;AACpE,QAAMC,QAAQ,GAAG,MAAI;AACnB,QAAGH,OAAH,EAAW;AACT,aAAO,YAAP;AACD,KAFD,MAEK;AACH,UAAGC,OAAO,IAAIA,OAAO,CAACG,MAAtB,EAA6B;AAC3B,4BAAQ;AAAA,oBACPH,OAAO,CAACI,KAAR,CAAc,CAAd,EAAgB,EAAhB,EAAoBC,GAApB,CAAwBC,IAAI,IAAE;AAC7B,gCAAO;AAAA,qCACT;AAAG,gBAAA,KAAK,EAAE;AAACC,kBAAAA,KAAK,EAAE;AAAR,iBAAV;AAA4B,gBAAA,IAAI,EAAED,IAAI,CAACE,KAAvC;AAA8C,gBAAA,MAAM,EAAC,QAArD;AAAA,0BAAgFF,IAAI,CAACG;AAArF,iBAAmEH,IAAI,CAACG,KAAxE;AAAA;AAAA;AAAA;AAAA;AADS;AAAA;AAAA;AAAA;AAAA,oBAAP;AAGD,WAJA;AADO;AAAA;AAAA;AAAA;AAAA,gBAAR;AAOD;AACF;;AAED,WAAO,IAAP;AACD,GAhBD;;AAkBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AACE,QAAA,OAAO,EAAE,MAAMR,UAAU,EAD3B;AAEE,QAAA,SAAS,EAAC,sBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,EAYGC,QAAQ,EAZX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnCD;;KAAMJ,M;AAqCN,eAAeA,MAAf","sourcesContent":["import React from 'react'\n\ntype Props =  {\n    testSpider: (time?: string, language?: string) => void,\n    spiders: any[],\n    loading: Boolean\n}\n\nconst Spider: React.FC<Props> = ({ loading, spiders, testSpider }) => {\n  const $spiders = ()=>{\n    if(loading){\n      return 'loading...'\n    }else{\n      if(spiders && spiders.length){\n        return  <div>\n        {spiders.slice(0,10).map(item=>{\n          return <p>\n        <a style={{color: 'white'}} href={item.links} target=\"_balnk\" key={item.title}>{item.title}</a>\n        </p> \n        })}\n      </div>\n      }\n    }\n\n    return null\n  }\n\n  return (\n    <div>\n      <div>\n        clickMe\n      </div>\n      <div className='Card--button'>\n        <button\n          onClick={() => testSpider()}\n          className='Card--button__delete'\n        >\n          testSpider\n        </button>\n      </div>\n      {$spiders()}\n    </div>\n  )\n}\n\nexport default Spider\n"]},"metadata":{},"sourceType":"module"}