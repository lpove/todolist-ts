{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/leipan/Desktop/release/React/Project/3-Blog/todolist-ts/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from './components/TodoItem';\nimport AddTodo from './components/AddTodo';\nimport Spider from './components/Spider';\nimport { getTodos, addTodo, updateTodo, deleteTodo, testSpider } from './API';\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [spiders, setSpiders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  const handleSaveTodo = (e, formData) => {\n    e.preventDefault();\n    addTodo(formData).then(({\n      status,\n      data\n    }) => {\n      if (status !== 201) {\n        throw new Error('Error! Todo not saved');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not updated');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleTestSpider = (time, language) => {\n    setLoading(true);\n    testSpider(time, language).then(({\n      status,\n      data\n    }) => {\n      console.log(data);\n\n      if (status !== 200) {\n        throw new Error('Error! spider is bad');\n      }\n\n      setSpiders(data.values);\n      setLoading(false);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spider, {\n      testSpider: handleTestSpider,\n      spiders: spiders,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      saveTodo: handleSaveTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n      updateTodo: handleUpdateTodo,\n      deleteTodo: handleDeleteTodo,\n      todo: todo\n    }, todo._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eqTGX83pJoDv7ETLyMxrdH1aH9g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/leipan/Desktop/release/React/Project/3-Blog/todolist-ts/client/src/App.tsx"],"names":["React","useEffect","useState","TodoItem","AddTodo","Spider","getTodos","addTodo","updateTodo","deleteTodo","testSpider","App","todos","setTodos","spiders","setSpiders","loading","setLoading","fetchTodos","then","data","catch","err","console","log","handleSaveTodo","e","formData","preventDefault","status","Error","handleUpdateTodo","todo","handleDeleteTodo","_id","handleTestSpider","time","language","values","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport TodoItem from './components/TodoItem'\nimport AddTodo from './components/AddTodo'\nimport Spider from './components/Spider'\nimport { getTodos, addTodo, updateTodo, deleteTodo, testSpider } from './API'\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n  const [spiders, setSpiders] = useState<any[]>([]);\n  const [loading, setLoading] = useState<Boolean>(false)\n\n  useEffect(() => {\n    fetchTodos()\n  }, [])\n\n  const fetchTodos = (): void => {\n    getTodos()\n    .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\n    .catch((err: Error) => console.log(err))\n  }\n\n const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\n   e.preventDefault()\n   addTodo(formData)\n   .then(({ status, data }) => {\n    if (status !== 201) {\n      throw new Error('Error! Todo not saved')\n    }\n    setTodos(data.todos)\n  })\n  .catch((err) => console.log(err))\n}\n\n  const handleUpdateTodo = (todo: ITodo): void => {\n    updateTodo(todo)\n    .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Todo not updated')\n        }\n        setTodos(data.todos)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const handleDeleteTodo = (_id: string): void => {\n    deleteTodo(_id)\n    .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Todo not deleted')\n        }\n        setTodos(data.todos)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const handleTestSpider = (time?:string, language?: string): void =>{\n    setLoading(true);\n    testSpider(time, language)\n      .then(({ status, data }) => {\n        console.log(data);\n\n        if (status !== 200) {\n          throw new Error('Error! spider is bad')\n        }\n        setSpiders((data as any).values);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err))\n  }\n\n  return (\n    <main className='App'>\n      <h1>My Todos</h1>\n      <Spider testSpider={handleTestSpider} spiders={spiders} loading={loading}/>\n      <AddTodo saveTodo={handleSaveTodo} />\n      {todos.map((todo: ITodo) => (\n        <TodoItem\n          key={todo._id}\n          updateTodo={handleUpdateTodo}\n          deleteTodo={handleDeleteTodo}\n          todo={todo}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}