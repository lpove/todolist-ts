{"version":3,"sources":["components/TodoItem.tsx","components/AddTodo.tsx","API.ts","App.tsx","index.tsx"],"names":["Todo","todo","updateTodo","deleteTodo","checkTodo","status","className","name","description","onClick","_id","AddTodo","saveTodo","useState","formData","setFormData","handleForm","e","currentTarget","id","value","onSubmit","htmlFor","onChange","type","disabled","undefined","baseUrl","getTodos","a","axios","get","todos","Error","addTodo","post","todoUpdate","put","updatedTodo","delete","deletedTodo","App","setTodos","useEffect","fetchTodos","then","data","catch","err","console","log","handleUpdateTodo","handleDeleteTodo","preventDefault","map","TodoItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAiCeA,EA1Be,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC3CC,EAAoBH,EAAKI,OAAL,eAA+B,GACzD,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAWF,EAAf,SAA2BH,EAAKM,OAChC,sBAAMD,UAAWF,EAAjB,SAA6BH,EAAKO,iBAEpC,sBAAKF,UAAU,eAAf,UACE,wBACEG,QAAS,kBAAMP,EAAWD,IAC1BK,UAAWL,EAAKI,OAAL,cAA8B,qBAF3C,sBAMA,wBACEI,QAAS,kBAAMN,EAAWF,EAAKS,MAC/BJ,UAAU,uBAFZ,2B,cCWOK,EA3BkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACjBC,qBADiB,mBAC1CC,EAD0C,KAChCC,EADgC,KAG3CC,EAAa,SAACC,GAClBF,EAAY,2BACPD,GADM,kBAERG,EAAEC,cAAcC,GAAKF,EAAEC,cAAcE,UAI1C,OACE,uBAAMd,UAAU,OAAOe,SAAU,SAACJ,GAAD,OAAOL,EAASK,EAAGH,IAApD,UACE,gCACE,gCACE,uBAAOQ,QAAQ,OAAf,kBACA,uBAAOC,SAAUP,EAAYQ,KAAK,OAAOL,GAAG,YAE9C,gCACE,uBAAOG,QAAQ,cAAf,yBACA,uBAAOC,SAAUP,EAAYQ,KAAK,OAAOL,GAAG,sBAGhD,wBAAQM,cAAuBC,IAAbZ,EAAlB,0B,uCC1BAa,EAAkB,wBAEXC,EAAQ,uCAAG,4BAAAC,EAAA,+EAEgCC,IAAMC,IAClDJ,EAAU,UAHE,cAEVK,EAFU,yBAKTA,GALS,sCAOV,IAAIC,MAAJ,MAPU,yDAAH,qDAWRC,EAAO,uCAAG,WACnBpB,GADmB,iBAAAe,EAAA,sEAIT5B,EAA2B,CAC7BM,KAAMO,EAASP,KACfC,YAAaM,EAASN,YACtBH,QAAQ,GAPG,SASoCyB,IAAMK,KACrDR,EAAU,YACV1B,GAXW,cASTW,EATS,yBAaRA,GAbQ,sCAeT,IAAIqB,MAAJ,MAfS,yDAAH,sDAmBP/B,EAAU,uCAAG,WACtBD,GADsB,iBAAA4B,EAAA,sEAIZO,EAAoC,CACtC/B,QAAQ,GALM,SAOoCyB,IAAMO,IAAN,UAC/CV,EAD+C,sBAC1B1B,EAAKS,KAC7B0B,GATc,cAOZE,EAPY,yBAWXA,GAXW,sCAaZ,IAAIL,MAAJ,MAbY,yDAAH,sDAiBV9B,EAAU,uCAAG,WACtBO,GADsB,eAAAmB,EAAA,+EAIoCC,IAAMS,OAAN,UAC/CZ,EAD+C,wBACxBjB,IALZ,cAIZ8B,EAJY,yBAOXA,GAPW,sCASZ,IAAIP,MAAJ,MATY,yDAAH,sDCiBRQ,EA/DO,WAAO,IAAD,EACA5B,mBAAkB,IADlB,mBACnBmB,EADmB,KACZU,EADY,KAG1BC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAa,WACjBhB,IACCiB,MAAK,gBAAWb,EAAX,EAAGc,KAAQd,MAAX,OAAwCU,EAASV,MACtDe,OAAM,SAACC,GAAD,OAAgBC,QAAQC,IAAIF,OAe/BG,EAAmB,SAAClD,GACxBC,EAAWD,GACV4C,MAAK,YAAuB,IAApBxC,EAAmB,EAAnBA,OAAQyC,EAAW,EAAXA,KACb,GAAe,MAAXzC,EACF,MAAM,IAAI4B,MAAM,2BAElBS,EAASI,EAAKd,UAEfe,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAG1BI,EAAmB,SAAC1C,GACxBP,EAAWO,GACVmC,MAAK,YAAuB,IAApBxC,EAAmB,EAAnBA,OAAQyC,EAAW,EAAXA,KACb,GAAe,MAAXzC,EACF,MAAM,IAAI4B,MAAM,2BAElBS,EAASI,EAAKd,UAEfe,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAGhC,OACE,uBAAM1C,UAAU,MAAhB,UACE,0CACA,cAAC,EAAD,CAASM,SArCS,SAACK,EAAoBH,GAC1CG,EAAEoC,iBACFnB,EAAQpB,GACP+B,MAAK,YAAuB,IAApBxC,EAAmB,EAAnBA,OAAQyC,EAAW,EAAXA,KAChB,GAAe,MAAXzC,EACF,MAAM,IAAI4B,MAAM,yBAElBS,EAASI,EAAKd,UAEfe,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,SA6BvBhB,EAAMsB,KAAI,SAACrD,GAAD,OACT,cAACsD,EAAD,CAEErD,WAAYiD,EACZhD,WAAYiD,EACZnD,KAAMA,GAHDA,EAAKS,YCrDpB8C,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.e9a87814.chunk.js","sourcesContent":["import React from 'react'\n\ntype Props = TodoProps & {\n    updateTodo: (todo: ITodo) => void\n    deleteTodo: (_id: string) => void\n}\n\nconst Todo: React.FC<Props> = ({ todo, updateTodo, deleteTodo }) => {\n  const checkTodo: string = todo.status ? `line-through` : ''\n  return (\n    <div className='Card'>\n      <div className='Card--text'>\n        <h1 className={checkTodo}>{todo.name}</h1>\n        <span className={checkTodo}>{todo.description}</span>\n      </div>\n      <div className='Card--button'>\n        <button\n          onClick={() => updateTodo(todo)}\n          className={todo.status ? `hide-button` : 'Card--button__done'}\n        >\n          Complete\n        </button>\n        <button\n          onClick={() => deleteTodo(todo._id)}\n          className='Card--button__delete'\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Todo\n","import React, { useState } from 'react'\n\ntype Props = { \n  saveTodo: (e: React.FormEvent, formData: ITodo | any) => void \n}\n\nconst AddTodo: React.FC<Props> = ({ saveTodo }) => {\n  const [formData, setFormData] = useState<ITodo | {}>()\n\n  const handleForm = (e: React.FormEvent<HTMLInputElement>): void => {\n    setFormData({\n      ...formData,\n      [e.currentTarget.id]: e.currentTarget.value,\n    })\n  }\n\n  return (\n    <form className='Form' onSubmit={(e) => saveTodo(e, formData)}>\n      <div>\n        <div>\n          <label htmlFor='name'>Name</label>\n          <input onChange={handleForm} type='text' id='name' />\n        </div>\n        <div>\n          <label htmlFor='description'>Description</label>\n          <input onChange={handleForm} type='text' id='description' />\n        </div>\n      </div>\n      <button disabled={formData === undefined ? true: false} >Add Todo</button>\n    </form>\n  )\n}\n\nexport default AddTodo\n","import axios, { AxiosResponse } from 'axios';\n\nconst baseUrl: string = 'http://localhost:4000';\n\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const todos: AxiosResponse<ApiDataType> = await axios.get(\n            baseUrl + '/todos'\n        );\n        return todos;\n    } catch (error) {\n        throw new Error(error);\n    }\n};\n\nexport const addTodo = async (\n    formData: ITodo\n): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const todo: Omit<ITodo, '_id'> = {\n            name: formData.name,\n            description: formData.description,\n            status: false,\n        };\n        const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n            baseUrl + '/add-todo',\n            todo\n        );\n        return saveTodo;\n    } catch (error) {\n        throw new Error(error);\n    }\n};\n\nexport const updateTodo = async (\n    todo: ITodo\n): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const todoUpdate: Pick<ITodo, 'status'> = {\n            status: true,\n        };\n        const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\n            `${baseUrl}/edit-todo/${todo._id}`,\n            todoUpdate\n        );\n        return updatedTodo;\n    } catch (error) {\n        throw new Error(error);\n    }\n};\n\nexport const deleteTodo = async (\n    _id: string\n): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\n            `${baseUrl}/delete-todo/${_id}`\n        );\n        return deletedTodo;\n    } catch (error) {\n        throw new Error(error);\n    }\n};\n","import React, { useEffect, useState } from 'react'\nimport TodoItem from './components/TodoItem'\nimport AddTodo from './components/AddTodo'\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './API'\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([])\n\n  useEffect(() => {\n    fetchTodos()\n  }, [])\n\n  const fetchTodos = (): void => {\n    getTodos()\n    .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\n    .catch((err: Error) => console.log(err))\n  }\n\n const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\n   e.preventDefault()\n   addTodo(formData)\n   .then(({ status, data }) => {\n    if (status !== 201) {\n      throw new Error('Error! Todo not saved')\n    }\n    setTodos(data.todos)\n  })\n  .catch((err) => console.log(err))\n}\n\n  const handleUpdateTodo = (todo: ITodo): void => {\n    updateTodo(todo)\n    .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Todo not updated')\n        }\n        setTodos(data.todos)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const handleDeleteTodo = (_id: string): void => {\n    deleteTodo(_id)\n    .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Todo not deleted')\n        }\n        setTodos(data.todos)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  return (\n    <main className='App'>\n      <h1>My Todos</h1>\n      <AddTodo saveTodo={handleSaveTodo} />\n      {todos.map((todo: ITodo) => (\n        <TodoItem\n          key={todo._id}\n          updateTodo={handleUpdateTodo}\n          deleteTodo={handleDeleteTodo}\n          todo={todo}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)"],"sourceRoot":""}